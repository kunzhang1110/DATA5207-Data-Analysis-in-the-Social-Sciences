knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
wvs.dat <- read.csv("./Data/au.edu.anu.ada.ddi.01252_F1.csv")
dim(wvs.dat)
library(dplyr)
recode_likert4 <- function(my_var) {
scale(as.numeric(as.character(recode(my_var,
'1' = '4',
'2' = '3',
'3' = '2',
'4' = '1',
'-2' = NULL))))
}
recode_likert10 <- function(my_var) {
scale(as.numeric(as.character(recode(my_var,
'1' = '10',
'2' = '9',
'3' = '8',
'4' = '7',
'5' = '6',
'6' = '5',
'7' = '4',
'8' = '3',
'9' = '2',
'10' = '1',
'-2' = NULL))))
}
recode_to_notnull <- function(my_var) {
scale(as.numeric(as.character(recode(my_var,
'-2' = NULL,
.default = my_var))))
}
library(dplyr)
recode_likert4 <- function(my_var) {
scale(as.numeric(as.character(recode(my_var,
'1' = '4',
'2' = '3',
'3' = '2',
'4' = '1',
'-2' = NULL))))
}
recode_likert10 <- function(my_var) {
scale(as.numeric(as.character(recode(my_var,
'1' = '10',
'2' = '9',
'3' = '8',
'4' = '7',
'5' = '6',
'6' = '5',
'7' = '4',
'8' = '3',
'9' = '2',
'10' = '1',
'-2' = NULL))))
}
recode_to_notnull <- function(my_var) {
scale(as.numeric(as.character(recode(my_var,
'-2' = NULL,
.default = my_var))))
}
wvs.dat$happiness <- recode_likert4(wvs.dat$V10)
wvs.dat$happiness <- recode_likert4(wvs.dat$V10)
wvs.dat$health <- recode_likert4(wvs.dat$V11)
wvs.dat$finances <- recode_to_notnull(wvs.dat$V59)
wvs.dat$satisfaction <- recode_to_notnull(wvs.dat$V23)
wvs.dat$freedom <- recode_to_notnull(wvs.dat$V55)
heads(wvs.dat$freedom)
head(wvs.dat$freedom)
wvs.dat$happiness <- recode_likert4(wvs.dat$V10)
wvs.dat$health <- recode_likert4(wvs.dat$V11)
wvs.dat$finances <- recode_to_notnull(wvs.dat$V59)
wvs.dat$satisfaction <- recode_to_notnull(wvs.dat$V23)
wvs.dat$freedom <- recode_to_notnull(wvs.dat$V55)
head(wvs.dat$freedom)
head(wvs.dat$happiness)
View(wvs.dat)
View(wvs.dat)
head(wvs.dat$V10)
wvs.dat$happiness <- recode_likert4(wvs.dat$V10)
head(wvs.dat$happiness)
wvs.dat$happiness <- as.numeric(as.character(recode(wvs.dat$V10,
'1' = '4',
'2' = '3',
'3' = '2',
'4' = '1',
'-2' = NULL)))
head(wvs.dat$happiness)
recode_likert4 <- function(my_var) {
(as.numeric(as.character(recode(my_var,
'1' = '4',
'2' = '3',
'3' = '2',
'4' = '1',
'-2' = NULL))))
}
recode_likert10 <- function(my_var) {
(as.numeric(as.character(recode(my_var,
'1' = '10',
'2' = '9',
'3' = '8',
'4' = '7',
'5' = '6',
'6' = '5',
'7' = '4',
'8' = '3',
'9' = '2',
'10' = '1',
'-2' = NULL))))
}
recode_to_notnull <- function(my_var) {
(as.numeric(as.character(recode(my_var,
'-2' = NULL,
.default = my_var))))
}
wvs.dat$happiness <- recode_likert4(wvs.dat$V10)
wvs.dat$health <- recode_likert4(wvs.dat$V11)
wvs.dat$finances <- recode_to_notnull(wvs.dat$V59)
wvs.dat$satisfaction <- recode_to_notnull(wvs.dat$V23)
wvs.dat$freedom <- recode_to_notnull(wvs.dat$V55)
head(wvs.dat$happiness)
ir.pca <- prcomp(na.omit(wvs.dat[,c("happiness",
"health",
"finances",
"satisfaction",
"freedom")]))
plot(ir.pca, type = "l")
View(ir.pca)
View(ir.pca)
# A Scree Plot is a simple line segment plot that shows the fraction of total variance in the data as explained or represented by each PC.
ir.pca <- prcomp(na.omit(wvs.dat[,c("happiness",
"health",
"finances",
"satisfaction",
"freedom")]))
plot(ir.pca, type = "l")
install.packages("psych")
library(psych)
fa.fit <- fa(wvs.dat[,c("happiness",
"health",
"finances",
"satisfaction",
"freedom")],
nfactors=1, rotate="varimax")
fa.fit
display(fa.fit)
fa.fit
fa.fit <- fa(wvs.dat[,c("happiness",
"health",
"finances",
"satisfaction",
"freedom")],
nfactors=2, rotate="varimax")
fa.fit
fa.fit <- fa(wvs.dat[,c("happiness",
"health",
"finances",
"satisfaction",
"freedom")],
nfactors=1, rotate="varimax")
fa.fit
wvs.dat$life.quality <- fa.fit$scores
(wvs.dat$life.quality <- fa.fit$scores)
head(wvs.dat$life.quality)
ggplot(wvs.dat, aes(life.quality)) +
geom_histogram()
library(ggplot2)
ggplot(wvs.dat, aes(life.quality)) +
geom_histogram()
head(wvs.dat$life.quality)
ggplot(wvs.dat, aes(life.quality)) +
geom_histogram()
fa.fit
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
wvs.dat <- read.csv("./Data/au.edu.anu.ada.ddi.01252_F1.csv")
dim(wvs.dat)
recode_likert4 <- function(my_var) {
as.numeric(as.character(recode(my_var,
'1' = '4',
'2' = '3',
'3' = '2',
'4' = '1',
'-2' = NULL)))
}
recode_likert10 <- function(my_var) {
as.numeric(as.character(recode(my_var,
'1' = '10',
'2' = '9',
'3' = '8',
'4' = '7',
'5' = '6',
'6' = '5',
'7' = '4',
'8' = '3',
'9' = '2',
'10' = '1',
'-2' = NULL)))
}
recode_to_notnull <- function(my_var) {
as.numeric(as.character(recode(my_var,
'-2' = NULL,
.default = my_var)))
}
wvs.dat$happiness <- recode_likert4(wvs.dat$V10)
wvs.dat$health <- recode_likert4(wvs.dat$V11)
wvs.dat$family <- recode_likert4(wvs.dat$V4)
wvs.dat$friend <- recode_likert4(wvs.dat$V5)
wvs.dat$society <- recode_likert4(wvs.dat$V74)
wvs.dat$happiness <- recode_likert4(wvs.dat$V10)
wvs.dat$health <- recode_likert4(wvs.dat$V11)
wvs.dat$family <- recode_likert4(wvs.dat$V4)
wvs.dat$friend <- recode_likert4(wvs.dat$V5)
wvs.dat$fair <- recode_to_notnull(wvs.dat$V56)
plot(ir.pca, type = "l") # variance latent variable ~ variance
ir.pca <- prcomp(na.omit(wvs.dat[,c("happiness",
"health",
"finances",
"satisfaction",
"freedom")]))
wvs.dat$happiness <- recode_likert4(wvs.dat$V10)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
wvs.dat <- read.csv("./Data/au.edu.anu.ada.ddi.01252_F1.csv")
dim(wvs.dat)
recode_likert4 <- function(my_var) {
as.numeric(as.character(recode(my_var,
'1' = '4',
'2' = '3',
'3' = '2',
'4' = '1',
'-2' = NULL)))
}
recode_likert10 <- function(my_var) {
as.numeric(as.character(recode(my_var,
'1' = '10',
'2' = '9',
'3' = '8',
'4' = '7',
'5' = '6',
'6' = '5',
'7' = '4',
'8' = '3',
'9' = '2',
'10' = '1',
'-2' = NULL)))
}
recode_to_notnull <- function(my_var) {
as.numeric(as.character(recode(my_var,
'-2' = NULL,
.default = my_var)))
}
wvs.dat$happiness <- recode_likert4(wvs.dat$V10)
wvs.dat$health <- recode_likert4(wvs.dat$V11)
wvs.dat$family <- recode_likert4(wvs.dat$V4)
wvs.dat$friend <- recode_likert4(wvs.dat$V5)
wvs.dat$fair <- recode_to_notnull(wvs.dat$V56)
ir.pca <- prcomp(na.omit(wvs.dat[,c("happiness",
"health",
"family",
"friend",
"fair")]))
plot(ir.pca, type = "l") # variance latent variable ~ variance
library(psych)
library(ggplot2)
fa.fit <- fa(wvs.dat[,c("happiness",
"health",
"finances",
"satisfaction",
"freedom")],
nfactors=1, rotate="varimax")
library(psych)
library(ggplot2)
fa.fit <- fa(wvs.dat[,c("happiness",
"health",
"family",
"friend",
"fair")],
nfactors=1, rotate="varimax")
fa.fit
# MR1: is the factor load
# h2: how latent traits drives the observed variable
# u2: uniqueness u2 = 1 - h2
wvs.dat$life.quality <- fa.fit$scores
head(wvs.dat$life.quality)
ggplot(wvs.dat, aes(life.quality)) +
geom_histogram()
mean(wvs.dat$life.quality)
head(wvs.dat$life.quality)
mean(wvs.dat$life.quality, na.rm=True)
mean(wvs.dat$life.quality, na.rm=T)
mean(wvs.dat$life.quality, na.rm=T)
ggplot(wvs.dat, aes(life.quality)) +
geom_histogram()
life.quality.linear.model = lm(life.quality ~ happiness + health + family + friend + fair,
data=wvs.dat)
display(life.quality.linear.model )
library(arm)
library(arm)
display(life.quality.linear.model )
life.quality.linear.model = lm(life.quality ~ happiness + health + family + friend,
data=wvs.dat)
display(life.quality.linear.model )
fa.fit
life.quality.linear.model = lm(life.quality ~ happiness,
data=wvs.dat)
display(life.quality.linear.model )
wvs.dat$Age.in.years <- recode(wvs.dat$V240,
'-2' = NULL,
'0' = NULL,
.default = wvs.dat$V240)
life.quality.linear.model.happiness = lm(life.quality ~ Age.in.years,
data=wvs.dat)
display(life.quality.linear.model)
life.quality.linear.model.age = lm(life.quality ~ Age.in.years,
data=wvs.dat)
display(life.quality.linear.model.age)
head(wvs.dat$life.quality)
wvs.dat$Age.in.years <- recode(wvs.dat$V240,
'-2' = NULL,
'0' = NULL,
.default = wvs.dat$V240)
head(wvs.dat$Age.in.years)
life.quality.linear.model.age = lm(life.quality ~ Age.in.years,
data=wvs.dat)
display(life.quality.linear.model.age)
life.quality.linear.model.age = lm(life.quality ~ Age.in.years + ,happiness
life.quality.linear.model.age = lm(life.quality ~ Age.in.years + happiness,
data=wvs.dat)
display(life.quality.linear.model.age)
head(wvs.dat$Age.in.years)
.default = wvs.dat$V240)
wvs.dat$Age.in.years <- as.numeric(recode(wvs.dat$V240,
'-2' = NULL,
'0' = NULL,
.default = wvs.dat$V240))
head(wvs.dat$Age.in.years)
life.quality.linear.model.age = lm(life.quality ~ Age.in.years + happiness,
data=wvs.dat)
display(life.quality.linear.model.age)
head(wvs.dat$Age.in.years)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
wvs.dat <- read.csv("./Data/au.edu.anu.ada.ddi.01252_F1.csv")
dim(wvs.dat)
recode_likert4 <- function(my_var) {
as.numeric(as.character(recode(my_var,
'1' = '4',
'2' = '3',
'3' = '2',
'4' = '1',
'-2' = NULL)))
}
recode_likert10 <- function(my_var) {
as.numeric(as.character(recode(my_var,
'1' = '10',
'2' = '9',
'3' = '8',
'4' = '7',
'5' = '6',
'6' = '5',
'7' = '4',
'8' = '3',
'9' = '2',
'10' = '1',
'-2' = NULL)))
}
recode_to_notnull <- function(my_var) {
as.numeric(as.character(recode(my_var,
'-2' = NULL,
.default = my_var)))
}
wvs.dat$happiness <- recode_likert4(wvs.dat$V10)
wvs.dat$health <- recode_likert4(wvs.dat$V11)
wvs.dat$family <- recode_likert4(wvs.dat$V4)
wvs.dat$friend <- recode_likert4(wvs.dat$V5)
wvs.dat$fair <- recode_to_notnull(wvs.dat$V56)
ir.pca <- prcomp(na.omit(wvs.dat[,c("happiness",
"health",
"family",
"friend",
"fair")]))
plot(ir.pca, type = "l") # variance latent variable ~ variance
library(psych)
library(ggplot2)
fa.fit <- fa(wvs.dat[,c("happiness",
"health",
"family",
"friend",
"fair")],
nfactors=1, rotate="varimax")
fa.fit
# MR1: is the factor load
# h2: how latent traits drives the observed variable
# u2: uniqueness u2 = 1 - h2
wvs.dat$life.quality <- fa.fit$scores
head(wvs.dat$life.quality)
ggplot(wvs.dat, aes(life.quality)) +
geom_histogram()
library(arm)
wvs.dat$trust.neighbours <- recode_likert4(wvs.dat$V103)
wvs.dat$trust.acquaintances <- recode_likert4(wvs.dat$V104)
life.quality.linear.model.age = lm(life.quality ~ trust.neighbours + trust.acquaintances,
data=wvs.dat)
display(life.quality.linear.model.age)
min(wvs.dat$life.quality)
min(wvs.dat$life.quality, ra.rm=T)
range(wvs.dat$life.quality, ra.rm=T)
heads(wvs.dat$life.quality)
head(wvs.dat$life.quality)
range(wvs.dat$life.quality, na.rm=T)
