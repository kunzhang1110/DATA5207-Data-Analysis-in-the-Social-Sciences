{
    "collab_server" : "",
    "contents" : "library(foreign)\n\nsetwd(\"/Users/shaunratcliff/Dropbox/Academia/Teaching/ACSPRI/Summer 2018/Data/Earnings\")\n\nearnings.data <- read.dta(\"earnings.dta\")\n\ntable(earnings.data$race)\n\n\n###recode data\n\nlibrary(car)\n\n#race\nearnings.data$race2 <- as.factor(recode(earnings.data$race, \"'1' = 'White';\n                              '2' = 'Black';\n                                c('3','4') = 'Other';\n                                  '9' = NA\"))\n\ntable(earnings.data$race, earnings.data$race2)\n\nlevels(earnings.data$race2)[4] <- \"Hispanic\"\nearnings.data$race2[earnings.data$hisp == \"1\"] <- \"Hispanic\"\n\n#gender\n\nearnings.data$gender <- recode(earnings.data$sex, \"'2' = 'Female'; \n                               '1' = 'Male'\")\t\n#age\n\nearnings.data$age <- 91 - earnings.data$yearbn \t\nearnings.data$age <- recode(earnings.data$age, \"'-8' = '92'\")\n\n\n#income\n\nearnings.data$earn.quintiles <- cut(earnings.data$earn, \n    breaks=c(quantile(earnings.data$earn, \n                      probs = seq(0, 1, by = 0.20), na.rm=TRUE)), \n    labels=c(\"0-20\",\"20-40\",\"40-60\",\"60-80\",\"80-100\"), \n    include.lowest=TRUE)\n\n\n###custom functions\ncalculate.95.ci.means(earnings.data$earn)\n\ncalculate.95.ci.means <- function(x){\n  \n  n <- table(is.na(x))[1]\n  estimate <- mean(x, na.rm=TRUE)\n  se <- sd(x, na.rm=TRUE) / sqrt(n)\n  int.95 <- estimate + qt(c(.025, .975), n-1)*se\n  result <- c(estimate, int.95)\n  return(result)\n}\ncalculate.95.ci.means(earnings.data$earn)\n\n\n\nearnings.data$height.quintiles <- cut(earnings.data$height, \n                                      breaks=c(quantile(earnings.data$height, \n                                                        probs = seq(0, 1, by = 0.20), na.rm=TRUE)),\n                                      labels=c(\"0-19\",\"20-39\",\"40-59\",\"60-79\",\"80-99\"), \n                                      include.lowest=TRUE)\n\n#analyse our data\n\nlibrary(plyr)\n\nearnings_race.height_means <- na.omit(ddply(earnings.data, .(race2, height.quintiles), summarize, \n                                            mean =  calculate.95.ci.means(earn)[1],\n                                            upper.ci =  calculate.95.ci.means(earn)[3],\n                                            lower.ci =  calculate.95.ci.means(earn)[2]))\n\nearnings_race.height_means$race2 <- reorder(earnings_race.height_means$race2, \n                                            earnings_race.height_means$mean)\n\nlibrary(ggplot2)\nlibrary(scales)\n\nggplot(earnings_race.height_means, aes(x = race2, y = mean)) + \n  geom_point(alpha=.6, size=1) + \n  geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width=0, alpha = .1) + \n  scale_y_continuous(labels = dollar) + \n  coord_cartesian(ylim = c(0,45000)) + \n  labs(title = \"Average income by height and race\", \n       y = \"Mean annual earnings\", \n       x = \"Race and ethnicity\") + \n  theme_bw() +\n  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),\n        axis.text.x = element_text(size=10, angle=90, hjust=1, vjust=.5)) +\n  facet_wrap(~ height.quintiles, nrow = 1) \n\n\n###earnings by gender and height\n  \nearnings_gender.height_means <- na.omit(ddply(earnings.data, .(gender, height.quintiles), summarize, \n                                            mean =  calculate.95.ci.means(earn)[1],\n                                            upper.ci =  calculate.95.ci.means(earn)[3],\n                                            lower.ci =  calculate.95.ci.means(earn)[2]))\n\nearnings_gender.height_means$gender <- reorder(earnings_gender.height_means$gender, \n                                               earnings_gender.height_means$mean)\n\n\n\nggplot(earnings_gender.height_means, aes(x = gender, y = mean)) + \n  geom_point(alpha=.6, size=1) + \n  geom_errorbar(aes(ymin = lower.ci, ymax = upper.ci), width=0, alpha = .1) + \n  scale_y_continuous(labels = dollar) + \n  coord_cartesian(ylim = c(0,45000)) + \n  labs(title = \"Average income by height and race\", \n       y = \"Mean annual earnings\", \n       x = \"Race and ethnicity\") + \n  theme_bw() +\n  theme(panel.grid.minor = element_blank(), panel.grid.major = element_blank(),\n        axis.text.x = element_text(size=10, angle=90, hjust=1, vjust=.5)) +\n  facet_wrap(~ height.quintiles, nrow = 1) \n\n\n###Confidence intervals for proprtions\n\ncalculate.95.ci.prop <- function(x, j){\n  \n  estimate <- table(x)[j] / sum(table(x))\n  se <- sqrt(estimate * (1-estimate) / sum(table(x)))\n  int.95 <- estimate + qnorm(c(.025, .975))*se\n  result <- c(estimate, int.95)\n  return(result)\n}\ncalculate.95.ci.prop(earnings.data$earn.quintiles, 1)\n\n\ncalculate.95.ci.prop <- function(x){ \n  estimate <- table(x) / sum(table(x)) \n  se <- sqrt(estimate * (1-estimate) / sum(table(x))) \n  uci <- round(estimate + qnorm(.975)*se,2) #obtain upper 95% confidence intervals\n  lci <- round(estimate + qnorm(.025)*se,2) #obtain lower 95% confidence intervals\n  int.95 <- data.frame(levels(x)) #create a new data frame based on the levels in x\n  int.95[,c(2:4)] <- cbind(round(estimate,2),lci,uci) #bind the estimate (the proportions of x) with the lci and uci and add to our new dataframe\n  names(int.95) <- c(\"Categories\", \"Proportion\", \"Lower CI\", \"Upper CI\") #rename the columns of our data frame (this comes in useful when we print out our results\n  return(int.95) #return the results of the function\n}\n\ncalculate.95.ci.prop(earnings.data$earn.quintiles)\n\n\nearnings_race.height_props <- na.omit(ddply(earnings.data, .(height.quintiles), summarize,\n      earnings = calculate.95.ci.prop(earn.quintiles)[,1],\n      proportion = calculate.95.ci.prop(earn.quintiles)[,2],\n      lci = calculate.95.ci.prop(earn.quintiles)[,3],\n      uci = calculate.95.ci.prop(earn.quintiles)[,4]))\n\nggplot(earnings_race.height_props, aes(x = earnings, y = proportion)) +\n  geom_point() +\n  geom_errorbar(aes(ymin = lci, ymax=uci), width = 0) +\n  scale_y_continuous(label=percent) +\nfacet_wrap(~ height.quintiles, nrow=1)\n\n\n#with race \n\nearnings.data$race3 <- recode(earnings.data$race2, \"c('Black', 'Hispanic') = 'Other'\")\n\nearnings_race.height_props <- na.omit(ddply(earnings.data, .(race3, height.quintiles), summarize,\n                                            earnings = calculate.95.ci.prop(earn.quintiles)[,1],\n                                            proportion = calculate.95.ci.prop(earn.quintiles)[,2],\n                                            lci = calculate.95.ci.prop(earn.quintiles)[,3],\n                                            uci = calculate.95.ci.prop(earn.quintiles)[,4]))\n\nlevels(earnings_race.height_props$height.quintiles) <- c(\"Shortest height quintile\",\n                                                         \"20-40th percentile\",\n                                                         \"40-60th percentile\",\n                                                         \"60-80th percentile\",\n                                                         \"Tallest quintile\") \n\n\n#rename earnings quintile levels\n\nlevels(earnings_race.height_props$earnings) <- c(\"Lowest earnings quintile\",\n                                                 \"20-40th percentile\",\n                                                 \"40-60th percentile\",\n                                                 \"60-80th percentile\",\n                                                 \"Highest quintile\") \n\nggplot(earnings_race.height_props, aes(x = earnings, y = proportion)) +\n  geom_point() +\n  geom_errorbar(aes(ymin = lci, ymax=uci), width = 0) +\n  scale_y_continuous(label=percent) +\n  coord_cartesian(ylim = c(0,.5)) + \n  theme_bw() +\n  theme(panel.grid.minor = element_blank(), \n        panel.grid.major = element_blank(),\n        axis.title.x = element_blank(), \n        axis.text.x = element_text(size=10, angle=90, hjust=1, vjust=.5), \n        axis.text.y = element_text(size=10), \n        plot.title = element_text(size=14, face=\"bold\", hjust=.5)) +\n  facet_grid(race3 ~ height.quintiles)\n\n\n\n#by gender \n\n\nearnings_gender.height_props <- na.omit(ddply(earnings.data, .(gender, height.quintiles), summarize,\n                                              earnings = calculate.95.ci.prop(earn.quintiles)[,1],\n                                              proportion = calculate.95.ci.prop(earn.quintiles)[,2],\n                                              lci = calculate.95.ci.prop(earn.quintiles)[,3],\n                                              uci = calculate.95.ci.prop(earn.quintiles)[,4]))\n\n\n\nlevels(earnings_gender.height_props$height.quintiles) <- c(\"Shortest height quintile\",\n                                                           \"20-40th percentile\",\n                                                           \"40-60th percentile\",\n                                                           \"60-80th percentile\",\n                                                           \"Tallest quintile\") \n\n\n#rename earnings quintile levels\n\nlevels(earnings_gender.height_props$earnings) <- c(\"Lowest earnings quintile\",\n                                                   \"20-40th percentile\",\n                                                   \"40-60th percentile\",\n                                                   \"60-80th percentile\",\n                                                   \"Highest quintile\") \n\nggplot(earnings_gender.height_props, aes(x = earnings, y = proportion)) +\n  geom_point() +\n  geom_errorbar(aes(ymin = lci, ymax=uci), width = 0) +\n  scale_y_continuous(label=percent) +\n  coord_cartesian(ylim = c(0,.5)) + \n  theme_bw() +\n  theme(panel.grid.minor = element_blank(), \n        panel.grid.major = element_blank(),\n        axis.title.x = element_blank(), \n        axis.text.x = element_text(size=10, angle=90, hjust=1, vjust=.5), \n        axis.text.y = element_text(size=10), \n        plot.title = element_text(size=14, face=\"bold\", hjust=.5)) +\n  facet_grid(gender ~ height.quintiles)\n\n\n\n###Regression\n\ny ~ x\n\nlibrary(arm)\n\n#earnings by height\n\nearnings.model.1 <- lm(earn ~ height, data=earnings.data)\ndisplay(earnings.model.1)\n\ncoef(earnings.model.1)[1] + coef(earnings.model.1)[2] * c(66,72,78)\n\n\npred.data <- data.frame(height = c(66,72,78))\npredict(earnings.model.1, pred.data, interval=\"predict\", level=.95)\n\nearnings = -84078.32 + 1563.14 * 71 \n\n\n#earnings by height and race\n\nearnings.data$race2 <- relevel(earnings.data$race2, ref =  \"White\")\n\nearnings.model.1 <- lm(earn ~ height + race2 + gender + age, data=earnings.data)\ndisplay(earnings.model.1)\n\nearnings.data$z.height <- scale(earnings.data$height, \n                                scale = (sd(earnings.data$height, na.rm=TRUE) * 2))\n\n\nearnings.data$z.age <- scale(earnings.data$age, \n                                scale = (sd(earnings.data$age, na.rm=TRUE) * 2))\n\nearnings.model.1 <- lm(earn ~ z.height + race2 + gender + z.age, \n                       data=earnings.data)\ndisplay(earnings.model.1)\n\ncoef(earnings.model.1)[1] + coef(earnings.model.1)[2] * \n  ((c(66,72,78) - attr(earnings.data$z.height, \"scaled:center\")) / \n     attr(earnings.data$z.height, \"scaled:scale\"))\n\n\nearnings.data$log.earn <- log(earnings.data$earn)\n\nearnings.data$log.earn[which(earnings.data$log.earn==-Inf)] = NA\n\nearnings.model.2 <- lm(log.earn ~ z.height + race2 + gender + z.age, \n                       data=earnings.data)\ndisplay(earnings.model.2)\n\nexp(coef(earnings.model.2)[1])\n",
    "created" : 1516054067207.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "115569371",
    "id" : "F6DE602E",
    "lastKnownWriteTime" : 1516142798,
    "last_content_update" : 1516142798312,
    "path" : "~/Dropbox/Academia/Teaching/ACSPRI/Summer 2018/Data/Earnings/earnings analysis.R",
    "project_path" : "earnings analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}