knitr::opts_chunk$set(echo = TRUE)
load("./Data/Midterm elections/us_data.Rdata")
library(dplyr)
us.data %>% #method chaining
group_by(vote) %>%
summarise(sum.val = sum(weights))
us.data %>% #method chaining
group_by(vote) %>%
summarise(sum.val = sum(weights)) %>%
na.omit() %>% #omit N/A data
mutate("Voters (%)" = sum.val / sum(sum.val) * 100)
us.data %>% #method chaining
group_by(vote) %>%
summarise(sum.e = sum(weights)) %>%
na.omit() %>% #omit N/A data
mutate("Voters (%)" = sum.e / sum(sum.e) * 100) # mutate() adds new variables that are functions of existing variables
us.data %>% #method chaining
group_by(vote) %>%
summarise(sum.val = sum(weights)) %>%
na.omit() %>% #omit N/A data
mutate("Voters (%)" = sum.val / sum(sum.val) * 100) # mutate() adds new variables that are functions of existing variables
load("./Data/Midterm elections/us_data.Rdata")
library(dplyr)
us.data %>% #method chaining
group_by(vote) %>%
summarise(sum.val = sum(weights)) %>% # summarise() is typically used on grouped data created by group_by(). The output will have one row for each group.
na.omit() %>% #omit N/A data
fliter(vote != "Not voting")
us.data %>% #method chaining
group_by(vote) %>%
summarise(sum.val = sum(weights)) %>% # summarise() is typically used on grouped data created by group_by(). The output will have one row for each group.
na.omit() %>% #omit N/A data
fliter(vote != "Not voting") %>%
mutate("Voters (%)" = sum.val / sum(sum.val) * 100) # mutate() adds new variables that are functions of existing variables
us.data %>% #method chaining
group_by(vote) %>%
summarise(sum.val = sum(weights)) %>% # summarise() is typically used on grouped data created by group_by(). The output will have one row for each group.
na.omit() %>% #omit N/A data
filter(vote != "Not voting") %>%
mutate("Voters (%)" = sum.val / sum(sum.val) * 100) # mutate() adds new variables that are functions of existing variables
us.data %>% #method chaining
group_by(vote) %>%
summarise(sum.val = sum(weights)) %>% # summarise() is typically used on grouped data created by group_by(). The output will have one row for each group.
na.omit() %>% #omit N/A data
# filter(vote != "Not voting") %>%
select(vote != "Not voting") %>%
mutate("Voters (%)" = sum.val / sum(sum.val) * 100) # mutate() adds new variables that are functions of existing variables
us.data %>% #method chaining
group_by(vote) %>%
summarise(sum.val = sum(weights)) %>% # summarise() is typically used on grouped data created by group_by(). The output will have one row for each group.
na.omit() %>% #omit N/A data
# filter(vote != "Not voting") %>%
select(vote) %>%
mutate("Voters (%)" = sum.val / sum(sum.val) * 100) # mutate() adds new variables that are functions of existing variables
us.data %>% #method chaining
group_by(vote) %>%
summarise(sum.val = sum(weights)) %>% # summarise() is typically used on grouped data created by group_by(). The output will have one row for each group.
na.omit() %>% #omit N/A data
# filter(vote != "Not voting") %>%
select(sum.val) %>%
mutate("Voters (%)" = sum.val / sum(sum.val) * 100) # mutate() adds new variables that are functions of existing variables
us.data %>% #method chaining
group_by(vote) %>%
summarise(sum.val = sum(weights)) %>% # summarise() is typically used on grouped data created by group_by(). The output will have one row for each group.
na.omit() %>% #omit N/A data
# filter(vote != "Not voting") %>%
mutate("Voters (%)" = sum.val / sum(sum.val) * 100) # mutate() adds new variables that are functions of existing variables
rename("Party" = vote) %>%
select(sum.val) %>% #select() keeps only the variables you mention; rename() keeps all variables.
rename("Party" = vote) %>%
select(sum.val) #select() keeps only the variables you mention; rename() keeps all variables.
rename("Party" = vote) %>%
select(sum.val) #select() keeps only the variables you mention; rename() keeps all variables.
select(sum.val) #select() keeps only the variables you mention; rename() keeps all variables.
us.data %>% #method chaining
group_by(vote) %>%
summarise(sum.val = sum(weights)) %>% # summarise() is typically used on grouped data created by group_by(). The output will have one row for each group.
na.omit() %>% #omit N/A data
# filter(vote != "Not voting") %>%
mutate("Voters (%)" = sum.val / sum(sum.val) * 100) # mutate() adds new variables that are functions of existing variables
rename("Party" = vote) %>%
select(sum.val) #select() keeps only the variables you mention; rename() keeps all variables.
us.data %>% #method chaining
group_by(vote) %>%
summarise(sum.val = sum(weights)) %>% # summarise() is typically used on grouped data created by group_by(). The output will have one row for each group.
na.omit() %>% #omit N/A data
# filter(vote != "Not voting") %>%
mutate("Voters (%)" = sum.val / sum(sum.val) * 100) %>%# mutate() adds new variables that are functions of existing variables
rename("Party" = vote) %>%
dplyr::select(-sum.val) #select() keeps only the variables you mention; rename() keeps all variables.
prop.table(table(us.data$rich.poor.diffs))
